name: CI

on:
  push:
    branches:
      - main

  pull_request:

  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check-ci-runs:
    name: Check previous runs
    if: ${{ github.event_name != 'workflow_call' }}
    runs-on: ubuntu-latest
    outputs:
      ci_required: ${{ steps.check-ci-runs.outputs.ci_required }}
    steps:
      - name: Check CI runs
        id: check-ci-runs
        uses: lkrms/check-ci-runs@v1
        with:
          ci_workflows: CI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check:
    name: Check generated files and formatting
    needs:
      - check-ci-runs
    if: ${{ (github.event_name == 'workflow_call' || needs.check-ci-runs.outputs.ci_required == 1) && !cancelled() && !failure() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: get-composer-cache
        shell: bash
        run: printf 'cache_dir=%s\n' "$(composer config cache-files-dir)" >>"$GITHUB_OUTPUT"

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-composer-cache.outputs.cache_dir }}
          key: composer-cache-${{ runner.os }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
          restore-keys: composer-cache-${{ runner.os }}-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress

      - name: Check generated files
        run: scripts/generate.php --check

      - name: Run PHP CS Fixer
        run: tools/php-cs-fixer check --diff --verbose

      - name: Run pretty-php
        run: tools/pretty-php --diff

  phpstan:
    name: PHPStan
    needs:
      - check
      - check-ci-runs
    if: ${{ (github.event_name == 'workflow_call' || needs.check-ci-runs.outputs.ci_required == 1) && !cancelled() && !failure() }}

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.3"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: Get Composer cache directory
        id: get-composer-cache
        shell: bash
        run: printf 'cache_dir=%s\n' "$(composer config cache-files-dir)" >>"$GITHUB_OUTPUT"

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-composer-cache.outputs.cache_dir }}
          key: composer-cache-${{ runner.os }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
          restore-keys: composer-cache-${{ runner.os }}-

      - name: Persist PHPStan cache
        uses: actions/cache@v4
        with:
          path: build/cache/phpstan
          key: phpstan-cache-${{ runner.os }}-${{ matrix.php-version }}-${{ github.run_id }}
          restore-keys: phpstan-cache-${{ runner.os }}-${{ matrix.php-version }}-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPStan
        run: vendor/bin/phpstan

  unit-tests:
    name: PHPUnit tests
    needs:
      - check
      - check-ci-runs
    if: ${{ (github.event_name == 'workflow_call' || needs.check-ci-runs.outputs.ci_required == 1) && !cancelled() && !failure() }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php-version:
          - "8.3"
        include:
          - os: ubuntu-latest
            php-version: "8.2"
          - os: ubuntu-latest
            php-version: "8.1"
          - os: ubuntu-latest
            php-version: "8.0"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: sqlite3
          coverage: pcov

      - name: Get Composer cache directory
        id: get-composer-cache
        shell: bash
        run: printf 'cache_dir=%s\n' "$(composer config cache-files-dir)" >>"$GITHUB_OUTPUT"

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-composer-cache.outputs.cache_dir }}
          key: composer-cache-${{ runner.os }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
          restore-keys: composer-cache-${{ runner.os }}-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPUnit tests and generate code coverage report
        id: run-phpunit-tests
        shell: bash
        run: |
          vendor/bin/phpunit ${RUNNER_DEBUG+--debug} --no-coverage --coverage-clover=coverage.xml && status=0 || status=$?
          printf 'coverage_report_generated=%d\n' "$([[ -s coverage.xml ]] && echo 1 || echo 0)" >>"$GITHUB_OUTPUT"
          (exit $status)

      - name: Upload code coverage report to Codecov
        if: ${{ !cancelled() && steps.run-phpunit-tests.outputs.coverage_report_generated == 1 }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
